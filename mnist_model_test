'''
test part
'''
import tensorflow as tf
from tensorflow import keras
from keras import models
from keras.models import load_model
from keras.utils import np_utils
from keras.datasets import mnist
import numpy as np

print("TensorFlow version : " , tf.__version__)

#===========================
# import mnist data set
#===========================
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()
test_images = test_images.reshape(10000, 28, 28, 1).astype('float32')/255
test_labels = np_utils.to_categorical(test_labels)
predict_img_idx = np.random.choice(test_images.shape[0], 10000)
predict_img = test_images[predict_img_idx]

#===========================
# load model
#===========================
model = load_model('mnist_net_model.h5')

#===========================
# predict
#===========================
predict_label = model.predict_classes(predict_img)
acc = 0
for i in range(10000):
    if np.argmax(test_labels[predict_img_idx[i]]) == predict_label[i]:
        acc += 1

print('acc : %.2f%%' % (acc/100))
